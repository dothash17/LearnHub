// <auto-generated />
using System;
using LearnHub.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnHub.Migrations
{
    [DbContext(typeof(LearnHubContext))]
    [Migration("20240408080839_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnHub.Models.Assignments", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssignmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AssignmentId");

                    b.HasIndex(new[] { "LessonId" }, "IX_Assignments_LessonID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("LearnHub.Models.Chats", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<int>("FirstParticipant")
                        .HasColumnType("int");

                    b.Property<int>("SecondParticipant")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex(new[] { "FirstParticipant" }, "IX_Chats_FirstParticipant");

                    b.HasIndex(new[] { "SecondParticipant" }, "IX_Chats_SecondParticipant");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("LearnHub.Models.Courses", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LearnHub.Models.Enrollments", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("EnrollmentId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Enrollments_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Enrollments_UserID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("LearnHub.Models.Grades", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("GradeId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Grades_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Grades_UserID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("LearnHub.Models.Lessons", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LessonId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Lessons_CourseID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("LearnHub.Models.Materials", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaterialId");

                    b.HasIndex(new[] { "LessonId" }, "IX_Materials_LessonID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("LearnHub.Models.Messages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int")
                        .HasColumnName("ChatID");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int")
                        .HasColumnName("RecipientID");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime");

                    b.HasKey("MessageId");

                    b.HasIndex(new[] { "ChatId" }, "IX_Messages_ChatID");

                    b.HasIndex(new[] { "RecipientId" }, "IX_Messages_RecipientID");

                    b.HasIndex(new[] { "SenderId" }, "IX_Messages_SenderID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LearnHub.Models.Progress", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<double>("ComletedMaterial")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProgressId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Progress_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Progress_UserID");

                    b.ToTable("Progress");
                });

            modelBuilder.Entity("LearnHub.Models.UserCourse", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex(new[] { "CourseId" }, "IX_UserCourse_CourseID");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("LearnHub.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LearnHub.Models.Assignments", b =>
                {
                    b.HasOne("LearnHub.Models.Lessons", "Lesson")
                        .WithMany("Assignments")
                        .HasForeignKey("LessonId")
                        .IsRequired()
                        .HasConstraintName("FK_Assignments_Lessons");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("LearnHub.Models.Chats", b =>
                {
                    b.HasOne("LearnHub.Models.Users", "FirstParticipantNavigation")
                        .WithMany("ChatsFirstParticipantNavigation")
                        .HasForeignKey("FirstParticipant")
                        .IsRequired()
                        .HasConstraintName("FK_Chats_Users");

                    b.HasOne("LearnHub.Models.Users", "SecondParticipantNavigation")
                        .WithMany("ChatsSecondParticipantNavigation")
                        .HasForeignKey("SecondParticipant")
                        .IsRequired()
                        .HasConstraintName("FK_Chats_Users2");

                    b.Navigation("FirstParticipantNavigation");

                    b.Navigation("SecondParticipantNavigation");
                });

            modelBuilder.Entity("LearnHub.Models.Enrollments", b =>
                {
                    b.HasOne("LearnHub.Models.Courses", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollments_Courses");

                    b.HasOne("LearnHub.Models.Users", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Enrollments_Users");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnHub.Models.Grades", b =>
                {
                    b.HasOne("LearnHub.Models.Courses", "Course")
                        .WithMany("Grades")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Grades_Courses");

                    b.HasOne("LearnHub.Models.Users", "User")
                        .WithMany("Grades")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Grades_Users");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnHub.Models.Lessons", b =>
                {
                    b.HasOne("LearnHub.Models.Courses", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Lessons_Courses");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LearnHub.Models.Materials", b =>
                {
                    b.HasOne("LearnHub.Models.Lessons", "Lesson")
                        .WithMany("Materials")
                        .HasForeignKey("LessonId")
                        .IsRequired()
                        .HasConstraintName("FK_Materials_Lessons");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("LearnHub.Models.Messages", b =>
                {
                    b.HasOne("LearnHub.Models.Chats", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .IsRequired()
                        .HasConstraintName("FK_Messages_Chats");

                    b.HasOne("LearnHub.Models.Users", "Recipient")
                        .WithMany("MessagesRecipient")
                        .HasForeignKey("RecipientId")
                        .IsRequired()
                        .HasConstraintName("FK_Messages_Users3");

                    b.HasOne("LearnHub.Models.Users", "Sender")
                        .WithMany("MessagesSender")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK_Messages_Users2");

                    b.Navigation("Chat");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("LearnHub.Models.Progress", b =>
                {
                    b.HasOne("LearnHub.Models.Courses", "Course")
                        .WithMany("Progress")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_Progress_Courses");

                    b.HasOne("LearnHub.Models.Users", "User")
                        .WithMany("Progress")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Progress_Users");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnHub.Models.UserCourse", b =>
                {
                    b.HasOne("LearnHub.Models.Courses", "Course")
                        .WithMany("UserCourse")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_UserCourse_Courses");

                    b.HasOne("LearnHub.Models.Users", "User")
                        .WithMany("UserCourse")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserCourse_Users");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnHub.Models.Chats", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("LearnHub.Models.Courses", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Grades");

                    b.Navigation("Lessons");

                    b.Navigation("Progress");

                    b.Navigation("UserCourse");
                });

            modelBuilder.Entity("LearnHub.Models.Lessons", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("LearnHub.Models.Users", b =>
                {
                    b.Navigation("ChatsFirstParticipantNavigation");

                    b.Navigation("ChatsSecondParticipantNavigation");

                    b.Navigation("Enrollments");

                    b.Navigation("Grades");

                    b.Navigation("MessagesRecipient");

                    b.Navigation("MessagesSender");

                    b.Navigation("Progress");

                    b.Navigation("UserCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
